version: 0.2

env:
  git-credential-helper: yes
  variables:
    CI_JOB_NAME: "envvars-ci"
    # REPOSITORY should be the ECR Repository where the container is stored
    REPOSITORY: "envvars"
  parameter-store:
    GITHUB_TOKEN: "/github_token"
phases:
  pre_build:
    commands:
    - echo Logging into ECR
    - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
    - echo Setting tag for new release...
    # To get the new release version, we will increment the last version number found in Github
    - NEW_RELEASE_TAG=$(increment.sh $(hub tag|grep '^v'|sort --version-sort |tail -1)); export NEW_RELEASE_TAG
    - echo Creating release...
    # We use the 'hub' command to create a release here with the contents of 'master'. If the command exits successfully, we then
    # git fetch to get the new tag created, and we use that tag to get a commit SHA for the new release.
    # This is a WORKAROUND to Codebuild not having the 'git_commit_sha' from the webhook available.
    # We then tag the image using tag_containers.py, if that command is successful, we are done with this section.
    # Failures are noted and notifications are made with links to the Codebuild job.
    - |
      if hub release create -m ${NEW_RELEASE_TAG} -t main ${NEW_RELEASE_TAG}; then
        git fetch origin
        if TAG_COMMIT_HASH=$(git rev-parse ${NEW_RELEASE_TAG}); then
          echo pass
        else
          echo Failed to get hash for ${NEW_RELEASE_TAG}
          exit 1
        fi
        echo Tagging ECR image...
        if python3 /usr/local/bin/tag_containers.py -n ${CI_JOB_NAME} -i ${TAG_COMMIT_HASH} -r ${REPOSITORY} -v ${NEW_RELEASE_TAG} -o ${CODEBUILD_SRC_DIR}/tag_output.txt; then
          echo pass 
        else
          PROJECT=$(echo ${CODEBUILD_BUILD_ID}|awk -F":" '{print $1}')
          BUILD=$(echo ${CODEBUILD_BUILD_ID}|awk -F":" '{print $2}')
          TAG_OUTPUT=$(cat ${CODEBUILD_SRC_DIR}/tag_output.txt)
          echo fail tagging 
          exit 1
        fi
      else
        PROJECT=$(echo ${CODEBUILD_BUILD_ID}|awk -F":" '{print $1}')
        BUILD=$(echo ${CODEBUILD_BUILD_ID}|awk -F":" '{print $2}')
        echo fail releasing
        exit 1
      fi
  build:
    commands:
  post_build:
    commands:
